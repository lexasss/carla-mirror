from typing import Callable, Union, List, Any

class EventBus:
    @property
    def event_count(self) -> int: ...
    
    @property
    def cls_name(self) -> str: ...
    
    def on(self, event: str) -> Callable[..., Any]: ...
    def add_event(self, func: Callable[..., Any], event: str) -> None: ...
    def emit(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def emit_only(self, event: str, func_names: Union[str, List[str]], *args: Any, **kwargs: Any) -> None: ...
    def emit_after(self, event: str) -> Callable[..., Any]: ...
    def remove_event(self, func_name: str, event: str) -> None: ...
